group 'com.otw'
version '0.1'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:2.6.1'
    }

    generateProtoTasks.generatedFilesBaseDir = 'generated-sources'

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
        }

        // In addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')

    }
}

dependencies {
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '2.6.1'
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '7.1.0'
    compile group: 'org.apache.lucene', name: 'lucene-spatial', version: '7.1.0'
    compile group: 'org.apache.lucene', name: 'lucene-spatial-extras', version: '7.1.0'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '7.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//group 'com.ontheway'
//version '0.1'
//
//apply plugin: 'java'
//
//sourceCompatibility = 1.8
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
//}
